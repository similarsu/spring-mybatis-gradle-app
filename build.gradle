
apply plugin: 'java'

apply plugin: 'application'

repositories {

    jcenter()
}

configurations {
    mybatisGenerator
}

dependencies {
    compile 'com.google.guava:guava:21.0'
    compile group: 'org.springframework', name: 'spring-context', version: '4.3.10.RELEASE'
    compile group: 'org.mybatis', name: 'mybatis', version: '3.4.4'
    compile group: 'org.mybatis', name: 'mybatis-spring', version: '1.3.1'
    compile group: 'org.springframework', name: 'spring-orm', version: '4.3.10.RELEASE'
    compile group: 'com.mchange', name: 'c3p0', version: '0.9.5.2'
    mybatisGenerator group: 'org.mybatis.generator', name: 'mybatis-generator-core', version: '1.3.5'
    mybatisGenerator group: 'mysql', name: 'mysql-connector-java', version: '5.1.43'
    compile group: 'mysql', name: 'mysql-connector-java', version: '5.1.43'
    mybatisGenerator group: 'tk.mybatis', name: 'mapper', version: '3.4.2'
    testCompile 'junit:junit:4.12'
}

mainClassName = 'cn.st.spring.mybatis.Application'

ext {
    profile = System.getProperty("profile","dev")
}

def loadProfile(){
    println "Load profile for ${profile}"
    def profileFile=file('settings.groovy')
    return new ConfigSlurper(profile).parse(profileFile.toURI().toURL()).toProperties()
}
import org.apache.tools.ant.filters.ReplaceTokens
processResources {
    from(sourceSets.main.resources.srcDirs){
        filter(ReplaceTokens,tokens:loadProfile())
    }
}

task mybatisGenerate {
    group="mybatis"
    description="mybatis generator"
    doLast {
        ant.properties['targetProject'] = projectDir.path
        ant.properties['driverClass'] = "com.mysql.jdbc.Driver"
        ant.properties['connectionURL'] = "jdbc:mysql://work.kydee.cn:3306/jdasst_dev?useUnicode=true&characterEncoding=utf8"
        ant.properties['userId'] = "jdasst_dev"
        ant.properties['password'] = "jdasst_dev"
        ant.properties['src_main_java'] = sourceSets.main.java.srcDirs[0].path
        ant.properties['src_main_resources'] = sourceSets.main.resources.srcDirs[0].path
        ant.properties['modelPackage'] = "cn.st.spring.mybatis.entity"
        ant.properties['mapperPackage'] = "cn.st.spring.mybatis.mapper"
        ant.properties['sqlMapperPackage'] = "mybatis/mapper"

        ant.taskdef(
                name: 'mbgenerator',
                classname: 'org.mybatis.generator.ant.GeneratorAntTask',
                classpath: configurations.mybatisGenerator.asPath
        )
        ant.mbgenerator(overwrite: true,
                configfile: 'src/main/resources/mybatis/generatorConfig.xml', verbose: true) {
            propertyset {
                propertyref(name: 'targetProject')
                propertyref(name: 'userId')
                propertyref(name: 'driverClass')
                propertyref(name: 'connectionURL')
                propertyref(name: 'password')
                propertyref(name: 'src_main_java')
                propertyref(name: 'src_main_resources')
                propertyref(name: 'modelPackage')
                propertyref(name: 'mapperPackage')
                propertyref(name: 'sqlMapperPackage')

            }
        }
    }

}